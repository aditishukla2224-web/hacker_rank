#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) {
    int x = *(int *)a;
    int y = *(int *)b;
    return (x > y) - (x < y);
}

int main() {
    int q;
    scanf("%d", &q);

    while (q--) {
        int n;
        scanf("%d", &n);

        int containerSum[n];
        int typeSum[n];
        for (int i = 0; i < n; i++) {
            containerSum[i] = 0;
            typeSum[i] = 0;
        }

        int matrix[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                scanf("%d", &matrix[i][j]);
                containerSum[i] += matrix[i][j];
                typeSum[j] += matrix[i][j];
            }
        }

        qsort(containerSum, n, sizeof(int), compare);
        qsort(typeSum, n, sizeof(int), compare);

        int possible = 1;
        for (int i = 0; i < n; i++) {
            if (containerSum[i] != typeSum[i]) {
                possible = 0;
                break;
            }
        }

        if (possible)
            printf("Possible\n");
        else
            printf("Impossible\n");
    }

    return 0;
}
