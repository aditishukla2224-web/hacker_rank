#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MOD 1000000007LL

long long substrings(const char *s) {
    int n = strlen(s);
    long long ans = 0;
    long long curr = 0; // sum of substrings ending at current position

    for (int i = 0; i < n; ++i) {
        int digit = s[i] - '0';
        // curr = curr * 10 + (i+1) * digit  (all modulo MOD)
        curr = ( (curr * 10) % MOD + ((long long)(i + 1) * digit) % MOD ) % MOD;
        ans = (ans + curr) % MOD;
    }
    return ans;
}

int main() {
    // allocate a large buffer to be safe for long inputs
    size_t bufsize = 1000005;
    char *s = (char*)malloc(bufsize);
    if (!s) return 1;

    if (scanf("%1000000s", s) != 1) { // read the number-string
        free(s);
        return 0;
    }

    long long result = substrings(s);
    printf("%lld\n", result);

    free(s);
    return 0;
}
