#include <stdio.h>
#include <stdlib.h>

// A simple hash set implementation using qsort and bsearch

int cmpfunc(const void *a, const void *b) {
    return (*(int *)a - *(int *)b);
}

int main() {
    int n, k;
    scanf("%d %d", &n, &k);
    
    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Sort the array
    qsort(arr, n, sizeof(int), cmpfunc);

    int count = 0;

    // For each element, binary search for element + k
    for (int i = 0; i < n; i++) {
        int target = arr[i] + k;
        if (bsearch(&target, arr, n, sizeof(int), cmpfunc) != NULL) {
            count++;
        }
    }

    printf("%d\n", count);
    return 0;
}
